import { LogInContext } from "@/Context/LogInContext/Login";
import { getCityDetails, PHOTO_URL } from "@/Service/GlobalApi";
import React, { useContext, useEffect, useState } from "react";
import { Link } from "react-router-dom";

import { Card, CardContent } from "@/components/ui/card";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import { useRefContext } from "@/Context/RefContext/RefContext";
import { useCache } from "@/Context/Cache/CacheContext";

function Locationinfo() {
  const { trip } = useContext(LogInContext);
  const [cityDets, setCityDets] = useState([]);
  const [photos, setPhotos] = useState("");
  const [Url, setUrl] = useState("");
  const { locationInfoRef } = useRefContext();

  const [allImages, setAllImages] = useState([]);

  const compliments = [
"–°–ø—Ä–∞–≤–¥—ñ —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä!",
"–•–º, —Ü–µ –æ–¥–Ω–µ –∑ –Ω–∞–π–∫—Ä–∞—â–∏—Ö –º—ñ—Å—Ü—å ‚Äî –≤–ª—É—á–Ω–∏–π –≤–∏–±—ñ—Ä!",
"–û, –±–µ–∑–ø–µ—Ä–µ—á–Ω–æ! –¶–µ –≤—ñ–¥–º—ñ–Ω–Ω–∏–π –≤–∏–±—ñ—Ä.",
"–ë–∞—á—É, —Ç–∏ –º–∞—î—à —Ç–∞–ª–∞–Ω—Ç –æ–±–∏—Ä–∞—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–µ.",
"–ê—Ö, —Ü–µ –≤–∏—â–∏–π –∫–ª–∞—Å. –£ —Ç–µ–±–µ –≤—ñ–¥–º—ñ–Ω–Ω–∏–π —Å–º–∞–∫!",
"–ù–µ –ø–æ—Å–ø–µ—Ä–µ—á–∞—î—à—Å—è ‚Äî –≥–µ–Ω—ñ–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä!",
"–í–∞—É, —Ç–∏ –∑–∞–≤–∂–¥–∏ –∑–Ω–∞—î—à, —è–∫ –æ–±—Ä–∞—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–µ.",
"–•–º, –Ω–µ –º–æ–∂—É –Ω–µ –ø–æ–≥–æ–¥–∏—Ç–∏—Å—è ‚Äî —Ü–µ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω–æ.",
"–¶–µ —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä, —É —Ç–µ–±–µ –≤–ª—É—á–Ω–µ –æ–∫–æ!",
"–í—ñ–¥–º—ñ–Ω–Ω–∏–π –≤–∏–±—ñ—Ä, —Ç–∏ –≤–ª—É—á–∏–≤ —É —Å–∞–º–µ —è–±–ª—É—á–∫–æ!",
"–¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —Ç–∞–ª–∞–Ω—Ç —É –≤–∏–±–æ—Ä—ñ –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ.",
"–¢–æ—á–Ω–æ –≤ —Ü—ñ–ª—å! –°–∞–º–µ —Ü–µ —è –± —ñ –æ–±—Ä–∞–≤.",
"–í–µ–ª–∏–∫—ñ —É–º–∏ –¥—É–º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤–æ ‚Äî —è–∫–∏–π –≤–∏–±—ñ—Ä!",
"–£ —Ç–µ–±–µ –≤—ñ–¥—á—É—Ç—Ç—è —Å—Ç–∏–ª—é ‚Äî —Ü–µ —Ç–æ—á–Ω–æ.",
"–¶–µ –≤—Ä–∞–∂–∞—é—á–∏–π –≤–∏–±—ñ—Ä, –¥—É–∂–µ –∫—Ä—É—Ç–æ!",
"–ë–∞—á—É, —Ç–∏ –ø—Ä–æ–≤—ñ–≤ –≥–∞—Ä–Ω–µ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è ‚Äî —Ç–æ–ø–æ–≤–∏–π –≤–∏–±—ñ—Ä.",
"–¶–µ–π –≤–∏–±—ñ—Ä —è –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—ñ–¥—Ç—Ä–∏–º—É—é.",
"–¢–∏ –º–∞—î—à —Ö–∏—Å—Ç –æ–±–∏—Ä–∞—Ç–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤!",
"–¶–µ —á—É–¥–æ–≤–∞ –∑–Ω–∞—Ö—ñ–¥–∫–∞ ‚Äî –º–æ–ª–æ–¥–µ—Ü—å!",
"–Ø –± —ñ —Å–∞–º –Ω–µ –∑–º—ñ–≥ –≤–∏–±—Ä–∞—Ç–∏ –∫—Ä–∞—â–µ!",
"–Ø–∫–∏–π —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä, —Ç–∏ —Å–ø—Ä–∞–≤–¥—ñ —Ä–æ–∑—É–º—ñ—î—à—Å—è –Ω–∞ —Ü—å–æ–º—É.",
"–§–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω–∏–π –≤–∏–±—ñ—Ä, —É —Ç–µ–±–µ —î —Å—Ç–∏–ª—å!",
"–¶–µ —Ä–æ–∑—É–º–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è, —è –≤—Ä–∞–∂–µ–Ω–∏–π!",
"–£ —Ç–µ–±–µ –≤—ñ–¥–º—ñ–Ω–Ω–∏–π —Å–º–∞–∫, —Ü–µ —Ñ–∞–∫—Ç.",
"–¶–µ –±—É–≤ –æ—á–µ–≤–∏–¥–Ω–∏–π –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å ‚Äî —á—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä!",
"–í–∞—É, —Ü–µ –ø—Ä–æ—Å—Ç–æ —ñ–¥–µ–∞–ª—å–Ω–æ ‚Äî –≥–∞—Ä–Ω–æ –ø—ñ–¥—ñ–±—Ä–∞–Ω–æ!",
"–¶–µ –≤–∏–±—ñ—Ä, —Å–ø–æ–≤–Ω–µ–Ω–∏–π –º—É–¥—Ä–æ—Å—Ç—ñ —Ç–∞ –∫–ª–∞—Å—É.",
  ];

  const randomCompliment =
    compliments[Math.floor(Math.random() * compliments.length)];

  const city = trip?.tripData?.location;

  const getCityInfo = async () => {
    const data = {
      textQuery: city,
    };
    const result = await getCityDetails(data)
      .then((res) => {
        setCityDets(res.data.places[0]);
        // console.log("Res Data", res.data.places[0]);
        setAllImages(res.data.places[0].photos);
        setPhotos(res.data.places[0].photos[0].name);
      })
      .catch((err) => console.log(err));
  };

  useEffect(() => {
    trip && getCityInfo();
  }, [trip]);

  const getUrl = (name) => {
    return PHOTO_URL.replace("{replace}", name);
  };

  useEffect(() => {
    const url = PHOTO_URL.replace("{replace}", photos);
    setUrl(url);
  }, [photos]);

  function getCheckinAndCheckout_MMDDYYYY(daysToStay) {
    daysToStay = parseInt(daysToStay, 10); // üëà fix here

    const today = new Date();
    const checkoutDate = new Date(today.getTime());
    checkoutDate.setDate(today.getDate() + daysToStay);

    const formatToMMDDYYYY = (date) => {
      const mm = String(date.getMonth() + 1).padStart(2, "0");
      const dd = String(date.getDate()).padStart(2, "0");
      const yyyy = date.getFullYear();
      return `${mm}${dd}${yyyy}`;
    };

    const checkin = formatToMMDDYYYY(today);
    const checkout = formatToMMDDYYYY(checkoutDate);

    return { checkin, checkout };
  }

  function getAdultsAndChildren(peopleString) {
    switch (peopleString) {
      case "1 Person":
        return { adults: 1, children: 0, rooms: 1 };

      case "2 People":
        return { adults: 2, children: 0, rooms: 1 }; 

      case "3 to 5 People":
        return { adults: 2, children: 2, rooms: 1 }; 

      case "5 to 10 People":
        return { adults: 8, children: 0, rooms: 2 }; 

      default:
        return { adults: 2, children: 0, rooms: 1 }; 
    }
  }

  const {
    // checkInDate,
    setCheckInDate,
    // checkOutDate,
    setCheckOutDate,
    setAdults,
    setChildrenCount,
    setRooms,
    // adults,
    // childrenCount,
    // rooms,
  } = useCache();

  useEffect(() => {
    const { checkin, checkout } = getCheckinAndCheckout_MMDDYYYY(
      trip?.userSelection?.noOfDays
    );
    const { adults, children, rooms } = getAdultsAndChildren(
      trip?.userSelection?.People
    );
    setCheckInDate(checkin);
    setCheckOutDate(checkout);
    setAdults(adults);
    setChildrenCount(children);
    setRooms(rooms);
  }, []);

  return (
    <div ref={locationInfoRef} className="my-1 md:my-5">
      <div className="location text text-center mb-10">
        <h2 className="text-3xl md:text-5xl font-bold mb-2">
          <span className="bg-gradient-to-b from-yellow-400 to-orange-500 bg-clip-text text-transparent">
            {city}{" "}
          </span>{" "}
        </h2>
        <p className="opacity-90 mx-auto text-center text-md font-medium tracking-tight text-primary/80 md:text-xl">
          {randomCompliment}
        </p>
      </div>
      <div className="carousel img opacity-90 mx-auto text-center text-lg font-medium tracking-tight text-primary/80 md:text-lg">
        –ü–æ–±–∞—á—Ç–µ –±—ñ–ª—å—à–µ —Ç–æ–≥–æ —â–æ –≤–∞—Å —á–µ–∫–∞—î!
      </div>
      <Carousel className="carousel w-full ">
        <CarouselContent>
          {allImages?.map((imgs, index) => (
            <CarouselItem key={index}>
              <div className="p-1 h-full w-full">
                <Card>
                  <CardContent className="flex max-h-[50vh] rounded-lg overflow-hidden h-full w-full items-center justify-center p-1">
                    <img
                      src={
                        getUrl(imgs.name) || "/images/main_img_placeholder.jpg"
                      }
                      className="rounded-lg cursor-pointer"
                      alt={imgs.name}
                    />
                  </CardContent>
                </Card>
              </div>
            </CarouselItem>
          ))}
        </CarouselContent>
        <CarouselPrevious className="hidden md:flex" />
        <CarouselNext className="hidden md:flex" />
      </Carousel>
      <h2 className="location-info md:mt-4 opacity-90 mx-auto text-center text-lg font-medium tracking-tight text-primary/80 md:text-xl">
        –û—Å—å –≤–∞—à –≤–∏–±—ñ—Ä, –≤–∏–≥–ª—è–¥–∞—î —á—É–¥–æ–≤–æ!
      </h2>
      <div className="location-info flex items-center justify-center py-2 gap-2 mt-2">
        <h3 className="location-info opacity-90 bg-foreground/20 px-2 md:px-4 flex items-center justify-center rounded-md text-center text-md font-medium tracking-tight text-primary/80 md:text-lg">
          üíµ {trip?.userSelection?.Budget}
        </h3>
        <h3 className="location-info opacity-90 bg-foreground/20 px-2 md:px-4 flex items-center justify-center rounded-md text-center text-md font-medium tracking-tight text-primary/80 md:text-lg">
          üë®‚Äçüë©‚Äçüëß‚Äçüë¶ {trip?.userSelection?.People}
        </h3>
        <h3 className="location-info opacity-90 bg-foreground/20 px-2 md:px-4 flex items-center justify-center rounded-md text-center text-md font-medium tracking-tight text-primary/80 md:text-lg">
          üìÜ {trip?.userSelection?.noOfDays} –î–Ω—ñ
        </h3>
      </div>
    </div>
  );
}

export default Locationinfo;
